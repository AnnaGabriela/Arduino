#include <Keypad.h>
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 5

char* password = "123";
char* cardID = "44 4d 41 52";

const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {{'1','2','3','A'},{'4','5','6','B'},{'7','8','9','C'},{'*','0','#','D'}};
byte rowPins[ROWS] = { 28, 27, 26, 29 };
byte colPins[COLS] = { 25, 24, 23, 22 };

MFRC522 rfid(SS_PIN, RST_PIN);
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

const int buzzer = 13;
const int ledVermelho = 12;
const int ledVerde = 11;
int position = 0;

void setup() {
  Serial.begin(9600);
  SPI.begin(); 
  rfid.PCD_Init();
  pinMode(ledVermelho, OUTPUT);
  pinMode(ledVerde, OUTPUT);
  pinMode(buzzer, OUTPUT);
  Serial.println("Aproxime o seu cart√£o do leitor...");
  lockDoor();
}

void loop() {
  readKeypad();
  readRFID();
}

void readRFID() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) return;
  Serial.print("UID da tag: ");
  String cardRead = "";
  byte letra;
  
  for (byte i = 0; i < rfid.uid.size; i++) {
     cardRead.concat(String(rfid.uid.uidByte[i] < 0x10 ? " 0" : " "));
     cardRead.concat(String(rfid.uid.uidByte[i], HEX));
  }
  
  Serial.println(cardRead);

  if (cardRead.substring(1) == cardID) {
    unlockDoor();
    delay(500);
    lockDoor();
  } else {
    lockDoor();
  }
}

void readKeypad() {
  char key = keypad.getKey();
  
  if (key == '*' || key == '#') {
    position = 0;
    lockDoor();
  }
  
  if (key == password[position]) {
    position ++;
  }
  
  if (position == 3) {
    unlockDoor();
    delay(500);
    lockDoor();
  }
}

void lockDoor () {
  digitalWrite(ledVermelho, HIGH);
  digitalWrite(ledVerde, LOW);
  noTone(buzzer);
}

void unlockDoor () {
  digitalWrite(ledVerde, HIGH);
  digitalWrite(ledVermelho, LOW);
  tone(buzzer, 1000);
}
